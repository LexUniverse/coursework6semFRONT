{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\nexport const deleteType = async id => {\n  const {\n    data\n  } = await $authHost({\n    method: 'DELETE',\n    url: 'api/type/' + id\n  });\n  return data;\n};\nexport const createLocation = async (locationData, token) => {\n  try {\n    const {\n      data\n    } = await $authHost.post('api/location/', locationData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Ошибка при создании локации');\n  }\n};\nexport const fetchLocation = async () => {\n  const {\n    data\n  } = await $host.get('api/location');\n  return data;\n};\nexport const createVacancy = async vacancy => {\n  const {\n    data\n  } = await $authHost.post('api/vacancy', vacancy);\n  return data;\n};\nexport const fetchVacancy = async (employmentTypeId, locationId, page, limit = 5) => {\n  const {\n    data\n  } = await $host.get('api/vacancy', {\n    params: {\n      employmentTypeId,\n      locationId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneVacancy = async id => {\n  const {\n    data\n  } = await $host.get('api/vacancy/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createType","type","data","post","fetchTypes","get","deleteType","id","method","url","createLocation","locationData","token","headers","Authorization","error","_error$response","_error$response$data","Error","response","message","fetchLocation","createVacancy","vacancy","fetchVacancy","employmentTypeId","locationId","page","limit","params","fetchOneVacancy"],"sources":["C:/Users/User/WebstormProjects/courseworkhh/client/src/http/vacancyAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\n\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type);\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type');\r\n    return data\r\n}\r\n\r\nexport const deleteType = async (id) => {\r\n    const {data} = await $authHost({method:'DELETE', url:'api/type/'+id});\r\n    return data;\r\n}\r\n\r\nexport const createLocation = async (locationData, token) => {\r\n    try {\r\n        const { data } = await $authHost.post('api/location/', locationData, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(error.response?.data?.message || 'Ошибка при создании локации');\r\n    }\r\n};\r\n\r\nexport const fetchLocation = async () => {\r\n    const {data} = await $host.get('api/location');\r\n    return data\r\n}\r\n\r\nexport const createVacancy = async (vacancy) => {\r\n    const {data} = await $authHost.post('api/vacancy', vacancy);\r\n    return data\r\n}\r\n\r\nexport const fetchVacancy = async (employmentTypeId, locationId, page, limit = 5) => {\r\n    const {data} = await $host.get('api/vacancy', {params: {employmentTypeId, locationId, page, limit}});\r\n    return data\r\n}\r\n\r\nexport const fetchOneVacancy = async (id) => {\r\n    const {data} = await $host.get('api/vacancy/' + id);\r\n    return data\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;AAGxC,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACrD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAACF;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOC,EAAE,IAAK;EACpC,MAAM;IAACL;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAAC;IAACU,MAAM,EAAC,QAAQ;IAAEC,GAAG,EAAC,WAAW,GAACF;EAAE,CAAC,CAAC;EACrE,OAAOL,IAAI;AACf,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAG,MAAAA,CAAOC,YAAY,EAAEC,KAAK,KAAK;EACzD,IAAI;IACA,MAAM;MAAEV;IAAK,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,eAAe,EAAEQ,YAAY,EAAE;MACjEE,OAAO,EAAE;QACLC,aAAa,EAAG,UAASF,KAAM;MACnC;IACJ,CAAC,CAAC;IACF,OAAOV,IAAI;EACf,CAAC,CAAC,OAAOa,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZ,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACI,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBd,IAAI,cAAAe,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,6BAA6B,CAAC;EACnF;AACJ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAM;IAACnB;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,cAAc,CAAC;EAC9C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMoB,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAM;IAACrB;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,aAAa,EAAEoB,OAAO,CAAC;EAC3D,OAAOrB,IAAI;AACf,CAAC;AAED,OAAO,MAAMsB,YAAY,GAAG,MAAAA,CAAOC,gBAAgB,EAAEC,UAAU,EAAEC,IAAI,EAAEC,KAAK,GAAG,CAAC,KAAK;EACjF,MAAM;IAAC1B;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,aAAa,EAAE;IAACwB,MAAM,EAAE;MAACJ,gBAAgB;MAAEC,UAAU;MAAEC,IAAI;MAAEC;IAAK;EAAC,CAAC,CAAC;EACpG,OAAO1B,IAAI;AACf,CAAC;AAED,OAAO,MAAM4B,eAAe,GAAG,MAAOvB,EAAE,IAAK;EACzC,MAAM;IAACL;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,cAAc,GAAGE,EAAE,CAAC;EACnD,OAAOL,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}