{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { jwtDecode } from \"jwt-decode\"; // Используем импорт из пакета jwt-decode\n\nexport default class UserStore {\n  constructor() {\n    this._isAuth = false;\n    this._user = {};\n    this._role = null;\n    makeAutoObservable(this);\n    this.checkAuth();\n  }\n\n  // Добавляем метод для проверки аутентификации и извлечения роли из токена\n  checkAuth() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      this.setUser(decodedToken);\n      this.setIsAuth(true);\n      this.setRole(decodedToken.role); // Устанавливаем роль из токена\n    }\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  setRole(role) {\n    this._role = role;\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n  get role() {\n    return this._role;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","jwtDecode","UserStore","constructor","_isAuth","_user","_role","checkAuth","token","localStorage","getItem","decodedToken","setUser","setIsAuth","setRole","role","bool","user","isAuth"],"sources":["C:/Users/User/WebstormProjects/courseworkhh/client/src/store/UserStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { jwtDecode } from \"jwt-decode\"; // Используем импорт из пакета jwt-decode\r\n\r\nexport default class UserStore {\r\n    constructor() {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._role = null;\r\n        makeAutoObservable(this);\r\n        this.checkAuth();\r\n    }\r\n\r\n    // Добавляем метод для проверки аутентификации и извлечения роли из токена\r\n    checkAuth() {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const decodedToken = jwtDecode(token);\r\n            this.setUser(decodedToken);\r\n            this.setIsAuth(true);\r\n            this.setRole(decodedToken.role); // Устанавливаем роль из токена\r\n        }\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setRole(role) {\r\n        this._role = role;\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get role() {\r\n        return this._role;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;;AAExC,eAAe,MAAMC,SAAS,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,IAAI;IACjBN,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAI,CAACO,SAAS,CAAC,CAAC;EACpB;;EAEA;EACAA,SAASA,CAAA,EAAG;IACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP,MAAMG,YAAY,GAAGV,SAAS,CAACO,KAAK,CAAC;MACrC,IAAI,CAACI,OAAO,CAACD,YAAY,CAAC;MAC1B,IAAI,CAACE,SAAS,CAAC,IAAI,CAAC;MACpB,IAAI,CAACC,OAAO,CAACH,YAAY,CAACI,IAAI,CAAC,CAAC,CAAC;IACrC;EACJ;EAEAF,SAASA,CAACG,IAAI,EAAE;IACZ,IAAI,CAACZ,OAAO,GAAGY,IAAI;EACvB;EAEAJ,OAAOA,CAACK,IAAI,EAAE;IACV,IAAI,CAACZ,KAAK,GAAGY,IAAI;EACrB;EAEAH,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACT,KAAK,GAAGS,IAAI;EACrB;EAEA,IAAIG,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACd,OAAO;EACvB;EAEA,IAAIa,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACZ,KAAK;EACrB;EAEA,IAAIU,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACT,KAAK;EACrB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}