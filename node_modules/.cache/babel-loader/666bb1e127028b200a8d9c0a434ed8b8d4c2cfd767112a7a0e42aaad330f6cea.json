{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\WebstormProjects\\\\courseworkhh\\\\client\\\\src\\\\components\\\\EmploymentTypeBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { deleteType } from \"../http/vacancyAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmploymentTypeBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    vacancy\n  } = useContext(Context);\n  const {\n    user\n  } = useContext(Context);\n  const clearSelection = () => {\n    vacancy.clearSelectedType(); // Вызываем метод для очистки выбранного типа\n  };\n  const handleDeleteType = async id => {\n    try {\n      await deleteType(id);\n      window.location.reload(); // Перезагрузка страницы после удаления\n    } catch (error) {\n      console.error('Ошибка при удалении типа:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap\",\n    children: [\" \", vacancy.EmploymentTypes.map(employmentType => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        cursor: \"pointer\"\n      },\n      border: employmentType.id === vacancy.selectedType.id ? \"danger\" : \"gray\",\n      className: \"p-1 m-1\",\n      onClick: () => vacancy.setSelectedType(employmentType),\n      children: user.role === \"ADMIN\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"id: \", employmentType.id, \" \", employmentType.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: () => handleDeleteType(employmentType.id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this) : employmentType.name\n    }, employmentType.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      className: \"p-1 m-2\",\n      onClick: clearSelection,\n      children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u043E\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}, \"w8p6RiRV19edC8CrIjrNDh7Su7M=\")), \"w8p6RiRV19edC8CrIjrNDh7Su7M=\");\n_c2 = EmploymentTypeBar;\nexport default EmploymentTypeBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmploymentTypeBar$observer\");\n$RefreshReg$(_c2, \"EmploymentTypeBar\");","map":{"version":3,"names":["React","useContext","observer","Context","Card","Button","deleteType","jsxDEV","_jsxDEV","EmploymentTypeBar","_s","_c","vacancy","user","clearSelection","clearSelectedType","handleDeleteType","id","window","location","reload","error","console","className","children","EmploymentTypes","map","employmentType","style","cursor","border","selectedType","onClick","setSelectedType","role","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","_c2","$RefreshReg$"],"sources":["C:/Users/User/WebstormProjects/courseworkhh/client/src/components/EmploymentTypeBar.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { deleteType } from \"../http/vacancyAPI\";\r\n\r\nconst EmploymentTypeBar = observer(() => {\r\n    const { vacancy } = useContext(Context);\r\n    const { user } = useContext(Context);\r\n\r\n    const clearSelection = () => {\r\n        vacancy.clearSelectedType(); // Вызываем метод для очистки выбранного типа\r\n    };\r\n\r\n    const handleDeleteType = async (id) => {\r\n        try {\r\n            await deleteType(id);\r\n            window.location.reload(); // Перезагрузка страницы после удаления\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении типа:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap\"> {/* Используем класс d-flex для создания горизонтального расположения */}\r\n            {vacancy.EmploymentTypes.map(employmentType =>\r\n                <Card\r\n                    style={{cursor: \"pointer\"}}\r\n                    border={employmentType.id === vacancy.selectedType.id ? \"danger\" : \"gray\"}\r\n                    key={employmentType.id}\r\n                    className={\"p-1 m-1\"}\r\n                    onClick={()=> vacancy.setSelectedType(employmentType)}\r\n                >\r\n                    {user.role === \"ADMIN\" ?\r\n                        <div>\r\n                            <p>id: {employmentType.id} {employmentType.name}</p>\r\n                            <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteType(employmentType.id)}>Удалить</Button>\r\n                        </div>\r\n                        :\r\n                        employmentType.name\r\n                    }\r\n                </Card>\r\n            )}\r\n            <Button variant=\"secondary\" className=\"p-1 m-2\" onClick={clearSelection}>Очистить выбор</Button>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default EmploymentTypeBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,iBAAiB,GAAAC,EAAA,CAAGR,QAAQ,CAAAS,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACrC,MAAM;IAAEE;EAAQ,CAAC,GAAGX,UAAU,CAACE,OAAO,CAAC;EACvC,MAAM;IAAEU;EAAK,CAAC,GAAGZ,UAAU,CAACE,OAAO,CAAC;EAEpC,MAAMW,cAAc,GAAGA,CAAA,KAAM;IACzBF,OAAO,CAACG,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAK;IACnC,IAAI;MACA,MAAMX,UAAU,CAACW,EAAE,CAAC;MACpBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,oBACIb,OAAA;IAAKe,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAAC,GAAC,EAC9BZ,OAAO,CAACa,eAAe,CAACC,GAAG,CAACC,cAAc,iBACvCnB,OAAA,CAACJ,IAAI;MACDwB,KAAK,EAAE;QAACC,MAAM,EAAE;MAAS,CAAE;MAC3BC,MAAM,EAAEH,cAAc,CAACV,EAAE,KAAKL,OAAO,CAACmB,YAAY,CAACd,EAAE,GAAG,QAAQ,GAAG,MAAO;MAE1EM,SAAS,EAAE,SAAU;MACrBS,OAAO,EAAEA,CAAA,KAAKpB,OAAO,CAACqB,eAAe,CAACN,cAAc,CAAE;MAAAH,QAAA,EAErDX,IAAI,CAACqB,IAAI,KAAK,OAAO,gBAClB1B,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,GAAG,MAAI,EAACG,cAAc,CAACV,EAAE,EAAC,GAAC,EAACU,cAAc,CAACQ,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpD/B,OAAA,CAACH,MAAM;UAACmC,OAAO,EAAC,QAAQ;UAACC,IAAI,EAAC,IAAI;UAACT,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAACW,cAAc,CAACV,EAAE,CAAE;UAAAO,QAAA,EAAC;QAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG,CAAC,GAENZ,cAAc,CAACQ;IAAI,GAVlBR,cAAc,CAACV,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYpB,CACV,CAAC,eACD/B,OAAA,CAACH,MAAM;MAACmC,OAAO,EAAC,WAAW;MAACjB,SAAS,EAAC,SAAS;MAACS,OAAO,EAAElB,cAAe;MAAAU,QAAA,EAAC;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEd,CAAC,kCAAC;AAACG,GAAA,GAxCGjC,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAAE,EAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}